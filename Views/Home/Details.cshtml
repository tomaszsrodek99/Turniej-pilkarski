@model Football.Entities.Player
@using Football.Models
<h2 class="text-white">@ViewData["Title"]</h2>
<button type="button" class="btn btn-secondary" onclick="goBack()">Wstecz</button>
<a href="@Url.Action("AddPlayer", "Player", new { countryId = ViewData["CountryId"] })" id="addPlayerButton" class="btn btn-primary">Dodaj zawodnika</a>


@if (ViewData["Players"] != null && ((List<Football.Entities.Player>)ViewData["Players"]).Any())
{
    var number = 1;
    <table id="countryTable" class="sortable table my-table">
        <thead>
            <tr>
                <th>Nr.</th>
                <th>Zawodnik</th>
                <th>Pozycja</th>
                <th>Wiek</th>
                <th>Klub</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in (List<Football.Entities.Player>)ViewData["Players"])
            {
                <tr>
                    <td>@(number)</td>
                    <td>@player.PlayerFullName</td>
                    <td>@player.Position</td>
                    <td>@player.Age</td>
                    <td>@player.Club</td>
                    <td>
                        @Html.ActionLink("Edytuj", "EditPlayer", "Player", new { playerId = player.PlayerID }, null) |
                        @Html.ActionLink("Usuń", "DeletePlayer", "Player", new { playerId = player.PlayerID }, new { onclick = "return confirm('Czy na pewno chcesz usunąć zawodnika?');" })
                    </td>
                </tr>
                number++;
            }

        </tbody>
    </table>
}
else
{
    <p class="text-white">Brak zawodników dla tego kraju. Dodaj pierwszego zawodnika.</p>
}
