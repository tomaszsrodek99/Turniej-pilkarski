@model Football.Entities.Country

@{
    ViewData["Title"] = "Create club";
}

<div class="text-center">
    <h2 class="text-white">Dodaj drużynę</h2>
    <form asp-action="CreateClub" asp-controller="Country" method="post" class="my-form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" name="coachId" value="@ViewData["CoachId"]" asp-for="CoachID" />
        <div class="form-group">
            <label asp-for="CountryName" class="control-label"></label>
            <input asp-for="CountryName" class="form-control" />
            <span asp-validation-for="CountryName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Group" class="control-label"></label>
            <select asp-for="Group" class="form-control">
                <option value="">Brak grupy</option>
                @foreach (var group in Enum.GetValues(typeof(Football.Entities.Group)))
                {
                    <option value="@group">@group</option>
                }
            </select>
            <span asp-validation-for="Group" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div class="btn-group">
                <button style="margin-right: 15px" type="button" class="btn btn-secondary" onclick="goBack()">Wstecz</button>
                <button type="submit" class="btn btn-primary">Dodaj</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}